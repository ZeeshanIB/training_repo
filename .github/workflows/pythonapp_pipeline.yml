name: web-app pipeline

on:
  workflow_call:
    inputs:
      image_name:
        description: Name of the Docker image
        required: true
        type: string
        default: "webapp-docker"
      image_tag:
        description: Tag of the Docker image
        required: true
        type: string
        default: "v1"  

# setting woking directory in github repo
defaults:
  run:
    working-directory: ./web-app

jobs:
  build-webapp-image:
    runs-on: ubuntu-22.04


    steps:
    - uses: actions/checkout@v3

    - name: Set name output
      id: name
      run: |
        USER_INPUT=${{ github.event.inputs.image_name }}
        echo "::set-output name=value::${USER_INPUT:-"webapp-docker"}"

    - name: docker login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
    - name: echo inputs
      run: |
        echo ${{ steps.name.outputs.value}}:${{ inputs.image_tag }}
    - name: Build the Docker image
      
      run: |
        
        docker build --tag ${{secrets.DOCKER_USER}}/${{ inputs.image_name }}:${{ inputs.image_tag }} .
    - name: Docker Push to docker hub
      run: docker push ${{secrets.DOCKER_USER}}/${{ inputs.image_name }}:${{ inputs.image_tag }}



  webapp_deployment:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-22.04
    #runs-on: self-hosted
    needs: build-webapp-image

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      
      db:
        # Docker Hub image
        image: postgres:12
        
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      
      # Downloads a copy of the code in your repository 
      
      - name: Check out repository code
        uses: actions/checkout@v3


      - name: create and connect to networks
        run: |
          docker network create mynetwork
          docker network connect mynetwork $(docker ps --format "{{.Names}}")
        #docker network connect mynetwork webapp

          

      - name: Connect to service container PostgreSQL
       
        run: docker run -d --name webapp --link $(docker ps --format "{{.Names}}"):postgres --network mynetwork -e DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres -p 80:80 ${{secrets.DOCKER_USER}}/${{ inputs.image_name }}:${{ inputs.image_tag }}


      - name: docker checks
        run: |
          sleep 30
          docker ps 
          docker logs webapp

      - name: sending post requst
        run: |
          sleep 30
          curl -X POST http://localhost:80/items -H "Content-Type: application/json" -d '{"title": "title3", "content": "content3"}'
          sleep 10
          
      - name: sending get request
        run: curl http://localhost:80/items/1  


